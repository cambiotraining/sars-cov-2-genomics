{
  "hash": "ff044dacf53338ff560e12e5d9645c87",
  "result": {
    "engine": "knitr",
    "markdown": "---\npagetitle: \"SARS Genomic Surveillance\"\n---\n\n\n# Abundance Visualisation\n\n\n::: {.cell}\n\n:::\n\n\n:::{.callout-tip}\n## Learning Objectives\n\n- Perform basic exploratory analysis of variant/lineage abundance data using the software _R_.\n- Generate several plots showing the change in variant abundance over time.\n- Explore which lineages are detected and assess the uncertainty in their estimates due to sequencing.\n- Recognise the pros and cons of analysing data from individual lineages or summarised across variants of concern.\n:::\n\n\n## Data exploration with R\n\nIn the previous section we have generated a CSV file that aggregated all the lineage/variant abundances into a single table. \nAlthough some basic exploration of these data can be done in _Excel_, we can perform more advanced and customised visualisations using the _R_ software (see the [R fundamentals](../appendices/quick_r.Rmd) appendix for a quick introduction to this software).\n\n:::{.callout-note collapse=true}\n#### Summary of R functions used\n\nThe main functions used in this section are: \n\n- Data import ([Posit cheatsheet](https://rstudio.github.io/cheatsheets/html/data-import.html)):\n  - `read_csv()` to import a CSV file as a data.frame/tibble object.\n- Data manipulation ([Posit cheatsheet](https://rstudio.github.io/cheatsheets/html/data-transformation.html)):\n  - `filter()` to subset rows of the table that match a particular condition.\n  - `arrange()` to sort the table by the values of selected columns.\n  - `count()` to count the unique values of selected columns.\n  - `mutate()` to add new columns to the table or modify the values of existing ones. \n- Working with categorical variables ([Posit cheatsheet](https://rstudio.github.io/cheatsheets/html/factors.html)):\n  - `fct_reorder()` to order categorical values based on a numeric variable (rather than the default alphabetical ordering).\n- Working with dates ([Posit cheatsheet](https://rstudio.github.io/cheatsheets/html/lubridate.html)):\n  - `floor_date()` to round a date down to the time unit specified (e.g. \"week\" or \"month\").\n- Visualisation with `ggplot2` ([Posit cheatsheet](https://rstudio.github.io/cheatsheets/html/data-visualization.html)).\n:::\n\nWe start by loading the `tidyverse` package, which contains several functions for data manipulation and visualisation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntheme_set(theme_bw())\n```\n:::\n\n\nWe have also set a \"black-and-white\" theme for our `ggplot` plots, instead of the default \"grey\" theme.\n\nThe next step is to read our data in:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs <- read_csv(\"results/tidyfreyja/vocs_abundances.csv\")\n```\n:::\n\n\n\n\nWe can check the first few rows of our data, to check that is was imported correctly:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(vocs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 10\n  sample      name   abundance boot_lo boot_up date       country city  latitude\n  <chr>       <chr>      <dbl>   <dbl>   <dbl> <date>     <chr>   <chr>    <dbl>\n1 SRR18541074 Delta    0.964    0.960  0.968   2021-12-01 United… San …     32.7\n2 SRR18541074 Omicr…   0.0197   0.0132 0.0228  2021-12-01 United… San …     32.7\n3 SRR18541074 Other    0.00122  0      0.00872 2021-12-01 United… San …     32.7\n4 SRR18541043 Omicr…   0.876    0.873  0.881   2021-12-26 United… San …     32.7\n5 SRR18541043 Other    0.0786   0.0683 0.0807  2021-12-26 United… San …     32.7\n6 SRR18541043 Delta    0.0338   0.0343 0.0447  2021-12-26 United… San …     32.7\n# ℹ 1 more variable: longitude <dbl>\n```\n\n\n:::\n:::\n\n\nWe can start with some basic exploration of our data, answering some simple questions.\nSome examples are given here.\n\nHow many VOCs have >75% frequency?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs |> \n  # keep rows with >= 75% abundance\n  filter(abundance >= 0.75) |> \n  # sort them by date\n  arrange(date)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 10\n   sample      name  abundance boot_lo boot_up date       country city  latitude\n   <chr>       <chr>     <dbl>   <dbl>   <dbl> <date>     <chr>   <chr>    <dbl>\n 1 SRR18541092 Delta     0.966   0.936   0.971 2021-09-05 United… San …     32.7\n 2 SRR18541114 Delta     0.982   0.976   0.984 2021-09-06 United… San …     32.7\n 3 SRR18541096 Delta     0.905   0.898   0.923 2021-09-07 United… Caer…     40.1\n 4 SRR18541099 Delta     0.888   0.876   0.960 2021-09-07 United… Caer…     40.1\n 5 SRR18541098 Delta     0.973   0.961   0.977 2021-09-13 United… Caer…     40.1\n 6 SRR18541049 Delta     0.962   0.960   0.973 2021-11-28 United… San …     32.7\n 7 SRR18541074 Delta     0.964   0.960   0.968 2021-12-01 United… San …     32.7\n 8 SRR18541042 Delta     0.795   0.782   0.820 2021-12-06 United… San …     32.7\n 9 SRR18541043 Omic…     0.876   0.873   0.881 2021-12-26 United… San …     32.7\n10 SRR18541028 Omic…     0.932   0.909   0.945 2021-12-27 United… San …     32.7\n11 SRR18541027 Omic…     0.886   0.883   0.890 2022-01-04 United… San …     32.7\n12 SRR18541030 Omic…     0.915   0.905   0.946 2022-01-23 United… San …     32.7\n# ℹ 1 more variable: longitude <dbl>\n```\n\n\n:::\n:::\n\n\nWhat was the count of each detected variant?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs |> \n  count(name)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  name        n\n  <chr>   <int>\n1 A           7\n2 Alpha       6\n3 Beta        7\n4 Delta      17\n5 Epsilon     1\n6 Gamma       8\n7 Omicron     9\n8 Other      15\n```\n\n\n:::\n:::\n\n\nWe can also start doing some visualisations. \nFor example, the previous question can be visualised with a barplot: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs |> \n  # count occurrence of each VOC\n  count(name) |> \n  # visualise\n  ggplot(aes(x = n, y = name)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nEven better, we can sort our variants by count rather than alphabetically: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs |> \n  # count occurrence of each VOC\n  count(name) |> \n  # reorder the names by their count\n  mutate(name = fct_reorder(name, n)) |>\n  # visualise\n  ggplot(aes(x = n, y = name)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nWe may also want to break this down by city: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs |> \n  # count by city and name\n  count(city, name) |> \n  # reorder the names by their count\n  mutate(name = fct_reorder(name, n)) |> \n  # visualise\n  ggplot(aes(x = n, y = name)) +\n  geom_col(aes(fill = city))\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nIt seems like Omicron was only detected in San Diego. \nCould this be because of the dates when the samples were collected in each city?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvocs |> \n  # create a variable with the start of the week for each sample\n  mutate(week = floor_date(date, \"week\")) |> \n  # count how many samples per week and city\n  count(week, city) |> \n  # barplot\n  ggplot(aes(week, n)) +\n  geom_col() +\n  facet_grid(rows = vars(city))\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nIndeed, it seems like San Diego has a wider coverage across time. \nIt is also clear from this plot that we have a time gap in our sampling, missing samples in Oct and Nov. \n\n:::{.callout-exercise}\n\nGiven that San Diego has better sampling through time, let's create a new table for our downstream visualisations.\n\n1. Create a new table called `sandiego`:\n   - Retain observations from San Diego only.\n   - Add a new column with the start of the month that each sample was collected in.\n   - Order the sample IDs and variant IDs by their date of collection.\n2. Make a new barplot with the counts of each variant observed in this city.\n\n:::{.callout-hint}\nFor the first task, the following functions can be used: \n\n- `filter()` to subset rows\n- `mutate()` to add or modify columns\n- `fct_reorder()` to order categorical variables based on the date\n:::\n\n:::{.callout-answer}\n\nThe following code creates a new table as requested:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego <- vocs |> \n  filter(city == \"San Diego\") |> \n  mutate(month = floor_date(date, \"month\"),\n         sample = fct_reorder(sample, date),\n         name = fct_reorder(name, date))\n```\n:::\n\n\nWe can produce a barplot of variant counts as we did before:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego |> \n  count(name) |> \n  mutate(name = fct_reorder(name, n)) |> \n  ggplot(aes(n, name)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n:::\n:::\n\n## Variant abundances\n\nRelative lineage abundances can be visualised as a barplot, where the samples are ordered by their date of collection.\nUsing `ggplot`: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego |> \n  ggplot(aes(x = sample, y = abundance)) +\n  geom_col(aes(fill = name)) +\n  scale_x_discrete(guide = guide_axis(angle = 45))\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nTo add further information about the date of collection, we can also \"facet\" the plot by the month when the samples were collected:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego |> \n  ggplot(aes(x = sample, y = abundance)) +\n  geom_col(aes(fill = name)) +\n  scale_x_discrete(guide = guide_axis(angle = 45)) +\n  facet_grid(cols = vars(month), scales = \"free_x\", space = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nYou may notice that some of the bars don't quite add up to 1. \nThis is simply a rounding issue from Freyja output.\n\nWe can also visualise the abundances in a heatmap-style plot, which may be useful if the number of samples is very large: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego |> \n  ggplot(aes(sample, name)) +\n  geom_tile(aes(fill = abundance)) +\n  scale_fill_viridis_c(limits = c(0, 1)) +\n  scale_x_discrete(guide = guide_axis(angle = 45)) +\n  facet_grid(~ month, scales = \"free_x\", space = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nWe can clearly see the transition between Delta and Omicron. \nDelta is dominant in Sep and Nov, then samples start to appear more mixed in Dec, and finally replaced by Omicron by Jan.\n\nAnother way to visualise these data is using a line plot, with a line for each variant: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego |> \n  ggplot(aes(date, abundance, colour = name)) +\n  geom_point(size = 2) +\n  geom_line(linewidth = 1)\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nThis plot also shows the clear shift between Delta and Omicron. \nWe can also see the other variants are much less frequent in these samples. \n\n## Lineage abundances\n\nSo far, we have been analysing the frequencies summarised by Variant of Concern (VOC).\nWe could do similar analyses using the individual lineages, however these tend to be less clear.\n\nLet's start by importing our data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlineages <- read_csv(\"results/tidyfreyja/lineage_abundances.csv\")\n```\n:::\n\n\n\n\nHere is an example of the heatmap-style visualisation for the San Diego samples: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlineages |> \n  # keep only samples from San Diego\n  filter(city == \"San Diego\") |> \n  # order the samples and lineages by date\n  mutate(sample = fct_reorder(sample, date),\n         name = fct_reorder(name, date)) |> \n  # visualise\n  ggplot(aes(sample, name)) +\n  geom_tile(aes(fill = abundance)) +\n  scale_fill_viridis_c(limits = c(0, 1)) +\n  theme_classic() +\n  scale_x_discrete(guide = guide_axis(angle = 45)) +\n  scale_y_discrete(guide = guide_axis(check.overlap = TRUE))\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nIn this case, there are too many lineages to be easily visible on a plot like this (not all lineage names are shown on the y-axis, as they were overlapping each other).\nTherefore, using the VOCs summaries is more suited for these types of visualisations. \n\nWe can also see that the abundance of these lineages is generally very low, most lineages have a low frequency.\nThis may be due to a mixture of sub-lineages being present in the sample, or even due to imprecisions in the estimates from our data.\nThis can happen for lineages that have very similar mutation profiles. \n\nHere is a histogram showing the distribution of lineage abundances:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlineages |> \n  ggplot(aes(abundance)) +\n  geom_histogram(binwidth = 0.01)\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nAs we can see, most lineages have an abundance of less than 1% (the first bar in the plot). \nSince many of these lineages are, in fact, part of the same clade, the summarised VOCs table gives a clearler picture for these types of visualisation.\n\nHowever, the lineage data may be useful to **investigate specific samples in more detail**. \nFor example, what were the lineages present in the latest sample collected?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlineages |> \n  filter(sample == \"SRR18541030\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 10\n   sample      name  abundance boot_lo boot_up date       country city  latitude\n   <chr>       <chr>     <dbl>   <dbl>   <dbl> <date>     <chr>   <chr>    <dbl>\n 1 SRR18541030 BA.1…   0.738    0.693  0.799   2022-01-23 United… San …     32.7\n 2 SRR18541030 BA.1…   0.0991   0.0674 0.102   2022-01-23 United… San …     32.7\n 3 SRR18541030 XD      0.0626   0.0282 0.0769  2022-01-23 United… San …     32.7\n 4 SRR18541030 BA.1…   0.0604   0.0513 0.0690  2022-01-23 United… San …     32.7\n 5 SRR18541030 BA.1…   0.0161   0      0.0349  2022-01-23 United… San …     32.7\n 6 SRR18541030 XS      0.00684  0      0.0137  2022-01-23 United… San …     32.7\n 7 SRR18541030 AY.1…   0.00260  0      0.00540 2022-01-23 United… San …     32.7\n 8 SRR18541030 BA.1…   0.00129  0      0.00389 2022-01-23 United… San …     32.7\n 9 SRR18541030 AY.2…   0.00128  0      0.00278 2022-01-23 United… San …     32.7\n10 SRR18541030 AY.1…   0.00125  0      0.00177 2022-01-23 United… San …     32.7\n# ℹ 1 more variable: longitude <dbl>\n```\n\n\n:::\n:::\n\n\nWe can plot their frequency and bootstrap uncertainty interval:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlineages |> \n  # keep rows for sample of interest only\n  filter(sample == \"SRR18541030\") |> \n  # sort lineage by abundance\n  mutate(name = fct_reorder(name, abundance)) |> \n  # make the plot\n  ggplot(aes(x = name, y = abundance, colour = abundance < 0.05)) +\n  geom_pointrange(aes(ymin = boot_lo, ymax = boot_up)) +\n  labs(x = \"Lineage\", y = \"Abundance (95% CI)\", colour = \"< 5%\")\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nWe can see several lineages with low frequency (less than 5%), which we should interpret carefully as those tend to less precise (see [Sutcliffe et al. 2023](https://doi.org/10.1101/2023.12.20.572426)). \nFor higher frequency lineages the confidence intervals are relatively narrow, suggesting the uncertainty due to sequencing depth is not problematic for this sample. \n\n\n### Exercise\n\n:::{.callout-exercise}\n#### Lineages abundance uncertainty\n\n- Based on the code just shown above, make a similar lineage abundance plot for the each of the following samples: \"SRR18541092\" and \"SRR18541114\". \n- What do you think about the uncertainty in the lineage estimates of these two samples? Can you hypothesise the reason for this difference? (Hint: go back to the _MultiQC_ report and check these samples' quality).\n- For both samples, make a similar plot but for the summaried VOC abundances. What do you think about the uncertainty in this case? Discuss with your neighbours.\n\n\n:::{.callout-answer}\n\nHere is the code for these two variants:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlineages |> \n  filter(sample == \"SRR18541092\") |> \n  mutate(name = fct_reorder(name, abundance)) |> \n  ggplot(aes(x = name, y = abundance, colour = abundance < 0.05)) +\n  geom_pointrange(aes(ymin = boot_lo, ymax = boot_up)) +\n  scale_x_discrete(guide = guide_axis(angle = 45)) +\n  labs(x = \"Lineage\", y = \"Abundance (95% CI)\", colour = \"< 5%\", \n       main = \"Sample: SRR18541092\")\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlineages |> \n  filter(sample == \"SRR18541114\") |> \n  mutate(name = fct_reorder(name, abundance)) |> \n  ggplot(aes(x = name, y = abundance, colour = abundance < 0.05)) +\n  geom_pointrange(aes(ymin = boot_lo, ymax = boot_up)) +\n  scale_x_discrete(guide = guide_axis(angle = 45)) +\n  labs(x = \"Lineage\", y = \"Abundance (95% CI)\", colour = \"< 5%\",\n       main = \"Sample: SRR18541114\")\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-23-2.png){width=672}\n:::\n:::\n\n\nWe can see that the uncertainty in sample _SRR18541114_ is substantially higher compared to _SRR18541092_. \n\nThe reason is possibly the **difference in sequencing depth** between these samples.\nIf we go back to the _MultiQC_ report from `viralrecon` we will see that the median coverage for _SRR18541114_ is only 94x, compared to 377x for the other sample. \nLooking at the _Mosdepth_ cumulative coverage graph on the report is even more illustrative: \n\n![](images/ww_mosdepth.png)\n\nWe can see from this plot that, for example, only ~50% of the genome in _SRR18541114_ is covered at >100x, compared to ~70% on the other sample.\nThis likely leads to several mutations that are missed during sequencing, leading to less stable abundance estimates.\n\nA similar code could be used to visualise the abundance of the VOCs in these two samples. \nHowever, we show a modified version of the code, combining both samples in the same plot:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsandiego |> \n  # keep rows for sample of interest only\n  filter(sample %in% c(\"SRR18541092\", \"SRR18541114\")) |> \n  # make the plot\n  ggplot(aes(x = name, y = abundance, colour = sample)) +\n  geom_pointrange(aes(ymin = boot_lo, ymax = boot_up), \n                  position = position_dodge(width = 0.5))\n```\n\n::: {.cell-output-display}\n![](03-ww_visualisation_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nWe've used a few tricks for this visualisation: \n\n- The `%in%` operator is used to select rows that match either of those samples.\n- We've added `colour = sample` aesthetic, to colour points based on the sample.\n- `position_dodge()` is used to shift the points of the two samples so they are not overlapping.\n\nThis visualisation reveals much less uncertainty when summarising the lineages into variants of concern. \nThis makes some sense, as multiple lineages are combined together for a given VOC, so even though the uncertainty of individual lineages may be high, this uncertainty is reduced when looking at the summarised results. \n\nThis reveals a clear tradeoff between looking at individual lineages compared to summarised VOC abundances. \nOn the one hand we get more information about specific lineages detected, but their abundances may have high uncertainty due to sequencing. \nOn the other hand we get more precise abundance estimates for VOCs, but loose the detail of which specific lineages of those variants were present in our samples. \n\nIn conclusion, looking at both results is useful. \nWe can start with an analysis of VOCs to get the bigger picture of which variants are circulating, and later explore individual lineages detected in the samples. \nWhen looking at individual lineages, we should be mindful of considering samples with higher sequencing depth, to get a more precise picture.\n:::\n:::\n\n\n## Freyja dashboard\n\nIn this chapter we covered the use of _R_ to generate these visualisations. \nThis is because of the flexibility of this language, which allows us to perform many different types of visualisation and data exploration. \n\nHowever, the _Freyja_ developers provide a command to generate a dashboard with a barplot of VOC abundances. \nWe have found this solution less flexible, and it requires configuring the metadata file in a very specific format.\n\nThere are two steps involved: \n\n- `freyja aggregate` is used to combine the results of multiple samples into a single file. \n- `freyja dash` is then used to create the dashboard.\n\nThe [_Freyja_ documentation](https://github.com/andersen-lab/Freyja#additional-options) gives more details about how to use these commands. \nYou will need to pay attention to the specific file format for metadata, which requires certain columns to be present in order for the commands to work. \n\n\n## Summary \n\n:::{.callout-tip}\n## Key points\n\n- There are several useful exploratory analyses that can be done on variant abundances:\n  - Which variants were detected at high frequency.\n  - How many times each variant was detected across all samples.\n  - How many samples were collected weekly in different regions.\n- Variant abundance over time can be displayed as barplots, heatmaps or line plots.\n- Samples with higher sequencing depth usually have narrower confidence intervals compared to those with low sequencing depth. \n- Analysis of both lineage and VOC abundance is useful:\n  - VOC abundance gives more stable estimates and provides a \"big picture\" of the variants circulating the population. \n  - Lineage abundance gives more detail about which exact lineages of a variant are circulating in the population, however the estimates are less precise with wider confidence intervals. \n:::\n",
    "supporting": [
      "03-ww_visualisation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}